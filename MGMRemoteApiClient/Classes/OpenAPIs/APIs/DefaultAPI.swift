//
// DefaultAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class DefaultAPI {
    /**
     Get all events

     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func events(apiResponseQueue: DispatchQueue = MGMRemoteApiClientAPI.apiResponseQueue, completion: @escaping ((_ result: Swift.Result<[EventApiModel], Error>) -> Void)) {
        eventsWithRequestBuilder().execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Get all events
     - GET /mgm.json
     - returns: RequestBuilder<[EventApiModel]>
     */
    open class func eventsWithRequestBuilder() -> RequestBuilder<[EventApiModel]> {
        let path = "/mgm.json"
        let URLString = MGMRemoteApiClientAPI.basePath + path
        let parameters: [String: Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[EventApiModel]>.Type = MGMRemoteApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: url?.string ?? URLString, parameters: parameters, isBody: false)
    }
}
